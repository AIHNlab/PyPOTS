name: Daily Testing

on:
    schedule:
        # https://crontab.guru. Run everyday at 0:00AM UTC, i.e. 08:00AM Beijing, i.e. 08:00PM Montreal (summer time)
        - cron: '0 0 * * *'

jobs:
    test:
        runs-on: ${{ matrix.os }}
        defaults:
            run:
                shell: bash {0}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macOS-latest]
                python-version: ["3.7", "3.9", "3.10"]
                torch-version: ["1.13.1"]

        steps:
            - uses: actions/checkout@v3

            - uses: actions/setup-python@v4
              with:
                python-version: ${{ matrix.python-version }}
                check-latest: true
                cache: pip
                cache-dependency-path: |
                    pypots/tests/environment_for_pip_test.txt

            - name: Install PyTorch ${{ matrix.torch-version }}+cpu
              # we have to install torch in advance because torch_sparse needs it for compilation,
              # refer to https://github.com/rusty1s/pytorch_sparse/issues/156#issuecomment-1304869772 for details
              run: |
                  which python
                  which pip
                  python -m pip install --upgrade pip
                  pip install torch==${{ matrix.torch-version }} --extra-index-url https://download.pytorch.org/whl/cpu
                  python -c "import torch; print('PyTorch:', torch.__version__)"

            - name: Install other dependencies
              run: |
                  pip install torch-scatter torch-sparse torch_geometric  -f https://data.pyg.org/whl/torch-${{ matrix.torch-version }}+cpu.html
                  python -m pip install -r pypots/tests/environment_for_pip_test.txt

            - name: Fetch the test environment details
              run: |
                  which python
                  pip list

            - name: Test with pytest
              run: |
                  coverage run --source=pypots -m pytest

            - name: Submit the report
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  coveralls --service=github
